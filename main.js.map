{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/enums/message.enum.ts","./src/app/interceptors/http.interceptor.ts","./src/app/services/auth/authentication.service.ts","./src/app/shared/services/loader.service.ts","./src/app/shared/services/message.service.ts","./src/app/shared/services/sweet-alert.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nconst routes: Routes = [\n  {\n    path :'',\n    loadChildren:()=> import('./pages/landing/landing.module').then((mod)=>mod.LandingModule),\n  },\n  {\n    path :'auth',\n    loadChildren:()=> import('./pages/auth/auth.module').then((mod)=>mod.AuthModule),\n  },\n  {\n    path :'admin',\n    loadChildren:()=> import('./pages/admin/admin.module').then((mod)=>mod.AdminModule),\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { environment } from '../environments/environment';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'CV.Frontend';\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { HttpInterceptor } from './interceptors/http.interceptor';\nimport { DatePipe } from '@angular/common';\nimport { CookieService } from 'ngx-cookie-service';\nimport { MessageService } from './shared/services/message.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [\n    {provide:HTTP_INTERCEPTORS, useClass:HttpInterceptor, multi:true},\n    DatePipe,\n    CookieService,\n    MessageService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export enum MessageEnum{\r\n    dashboardShowSubHeader = \"dashboardShowSubHeader\",\r\n    dashboardSubHeaderTitle = \"dashboardSubHeaderTitle\"\r\n}","import { Injectable } from '@angular/core';\nimport { timeout } from 'rxjs/operators';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpSentEvent,\n  HttpHeaderResponse,\n  HttpProgressEvent,\n  HttpResponse,\n  HttpUserEvent,\n  HttpErrorResponse,\n  HttpEvent,\n} from '@angular/common/http';\nimport { Observable, BehaviorSubject, throwError, TimeoutError } from 'rxjs';\n\nimport {\n  catchError,\n  switchMap,\n  finalize,\n  filter,\n  take,\n  map,\n} from 'rxjs/operators';\n\nimport { Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { LoaderService } from '../shared/services/loader.service';\nimport { RefreshTokenRequest } from '../models/dto/request/user-management/refresh-token-request';\nimport { RefreshTokenResponse } from '../models/dto/response/user-management/refresh-token-response';\nimport { SweetAlertService } from '../shared/services/sweet-alert.service';\nimport { LogoutRequest } from '../models/dto/request/user-management/logout-request';\nimport { AuthenticationService } from '../services/auth/authentication.service';\nimport { BaseResponse } from '../models/base-response';\n@Injectable()\nexport class HttpInterceptor {\n  constructor(\n    private authService: AuthenticationService,\n    private cookieService: CookieService,\n    public loaderService: LoaderService,\n    private router: Router,\n    private sweetAlertService:SweetAlertService,\n    \n  ) {\n    this.UUID = this.cookieService.get('browserUUID');\n  }\n  private requestCount = 0;\n  private sessionId: string = \"\";\n  private userId: string = \"\";\n  isRefreshingToken: boolean = false;\n  tokenSubject: BehaviorSubject<string> = new BehaviorSubject<string>('');\n  UUID: any;\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<\n    | HttpSentEvent\n    | HttpHeaderResponse\n    | HttpProgressEvent\n    | HttpResponse<any>\n    | HttpUserEvent<any>\n    | any\n  > {\n\n    this.requestCount++;\n    // set loading to true for the first request\n    if (this.requestCount === 1) {\n      this.loaderService.isLoading.next(true);\n    }\n    var token = '';\n    token = this.authService.JwtToken;\n    if(token!=\"\" && token!=undefined){\n      this.sessionId = this.authService.getClaims('SessionId');\n    }\n    \n    this.loaderService.isLoading.next(true);\n    // this.progressBarService.show();\n    return next.handle(this.addTokenToRequest(request, token, false)).pipe(\n      finalize(() => {\n        this.requestCount--;\n        // set loading to false when all requests have completed\n        if (this.requestCount === 0) {\n          this.loaderService.isLoading.next(false);\n        }\n      }),\n      catchError((err) => {\n        console.log('Error Occured = ', err);\nvar message=err?.error?.message;\n        if (err.status == 499) {\n          //499 occurs when api responding takes time and client side timout\n          console.log('Error Occured = ', err);          \n          this.sweetAlertService.showError('Failure', 'HttpErrorResponse 499 : Something Went Wrong. Please Try again Later');\n        }\n        if (err instanceof HttpErrorResponse) {\n          switch ((<HttpErrorResponse>err).status) {\n            case 401:\n              if (\n                request.url.indexOf('login/refresh') > -1 &&\n                this.authService.JwtToken != ''\n              ) {\n                return <any>this.Logout();\n              } else {\n                return this.handle401Error(request, next);\n              }\n\n            case 500:\n              if(message){\n                this.sweetAlertService.showError('Failure',message);\n              }\n              else{\n                this.sweetAlertService.showError('Failure', 'Something Went Wrong. Please Try again Later');\n              } \n              if (request.url.indexOf('login/refresh') > -1) {\n                return <any>this.Logout();;\n              }\n              break;\n            case 400:\n              if(message){\n                this.sweetAlertService.showError('Failure',message);\n              }\n              else{\n                this.sweetAlertService.showError('Failure', 'HttpErrorResponse 400 : Bad Request Received.');      \n              } \n                      \n              if (request.url.indexOf('login') > -1) {\n              }\n              break;\n            case 403:\n              this.sweetAlertService.showError('Failure', 'HttpErrorResponse 403 : Permission Denied.');\n              this.router.navigate(['dashboard']);\n              break;\n            default:\n          }\n        } else {\n        }\n      })\n    );\n  }\nprivate Logout(){\n  let logoutRequest :LogoutRequest={\n    sessionId:\"1\"\n  }\n  this.authService.logout(logoutRequest).subscribe((resp) => {\n  });\n}\n  private addTokenToRequest(\n    request: HttpRequest<any>,\n    token: string,\n    isReplay: boolean\n  ): HttpRequest<any> {\n    return request.clone({\n      setHeaders: {\n        Authorization: 'Bearer ${token}',\n        Platform: '1',\n        UUID: this.UUID,\n      },\n    });\n  }\n\n  private handle401Error(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (!this.isRefreshingToken) {\n      this.isRefreshingToken = true;\n      this.tokenSubject.next('');\n  \n      const refTokenObj: RefreshTokenRequest = {\n        token: this.authService.JwtToken,\n        refreshToken: this.authService.refreshToken,\n      };\n  \n      return this.authService.refreshAccessToken(refTokenObj).pipe(\n        switchMap((resp: BaseResponse<RefreshTokenResponse>) => {\n          this.isRefreshingToken = false;\n          if (resp.isSuccess) {\n            this.authService.JwtToken = resp.data.updatedAccessToken;\n            this.authService.refreshToken = resp.data.updatedRefreshToken;\n            this.tokenSubject.next(resp.data.updatedAccessToken);\n            return next.handle(this.addTokenToRequest(request, resp.data.updatedAccessToken, false));\n          } else {\n            this.tokenSubject.next('');\n            this.sweetAlertService.showError('Failure', resp.message);\n            this.Logout();\n            return throwError(() => new Error('Refresh failed'));\n          }\n        }),\n        catchError(err => {\n          this.isRefreshingToken = false;\n          this.tokenSubject.next('');\n          this.Logout();\n          return throwError(() => err);\n        })\n      );\n    } else {\n      // Wait until the token is refreshed\n      return this.tokenSubject.pipe(\n        filter(token => token != null && token !== ''),\n        take(1),\n        switchMap(token => {\n          return next.handle(this.addTokenToRequest(request, token, false));\n        })\n      );\n    }\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\nimport { EncryptStorage } from 'encrypt-storage';\nimport { Observable } from 'rxjs';\nimport { jwtDecode } from 'jwt-decode';\nimport { LoginResponse } from 'src/app/models/dto/response/user-management/login-response';\nimport { LoginRequest } from 'src/app/models/dto/request/user-management/login-request';\nimport { RefreshTokenRequest } from 'src/app/models/dto/request/user-management/refresh-token-request';\nimport { AuthorizeOTPRequest } from 'src/app/models/dto/request/user-management/authorize-otp-request';\nimport { RefreshTokenResponse } from 'src/app/models/dto/response/user-management/refresh-token-response';\nimport { MenuItems } from 'src/app/models/dto/response/user-management/menu-items';\nimport { ForGotPasswordRequestDto } from 'src/app/models/dto/request/user-management/forgot-password-request';\nimport { BaseResponse } from 'src/app/models/base-response';\nimport { ValidateOtpRequestDto } from 'src/app/models/dto/request/user-management/validate-otp-request';\nimport { ResetPasswordRequestDto } from 'src/app/models/dto/request/user-management/reset-password-request';\nimport { LogoutRequest } from 'src/app/models/dto/request/user-management/logout-request';\nexport const encryptStorage = new EncryptStorage(\n  'dU0OlV5B7xMu9g33uP1DMPoqKGBUhROw',\n  {\n    prefix: '@coinEnginePortal',\n  }\n);\n\n@Injectable({ providedIn: 'root' })\nexport class AuthenticationService {\n  public baseAPIUrl: string = environment.baseAPIUrl;\n\n  constructor(private http: HttpClient, private router: Router) {\n    window.addEventListener('storage', this.storageEventListener.bind(this));\n  }\n\n  private storageEventListener(event: StorageEvent) {\n    if (event.storageArea == encryptStorage) {\n    }\n    if (event.storageArea == localStorage) {\n      let token = this.JwtToken;\n      if (token == '') {\n        // you can update this as per your key\n        this.router.navigate(['/login']);\n      }\n    }\n  }\n\n  get refreshToken() {\n    return encryptStorage.getItem('coinEngineRefreshToken') ?? '';\n  }\n\n  set refreshToken(token: string) {\n    encryptStorage.setItem('coinEngineRefreshToken', token);\n  }\n\n  get JwtToken() {\n    return encryptStorage.getItem('coinEngineJwtToken') ?? '';\n  }\n\n  set JwtToken(token: string) {\n    encryptStorage.setItem('coinEngineJwtToken', token);\n  }\n\n  get getRetailerInfo() {\n    return JSON.parse(localStorage.getItem('retailerInfo') || '{}');\n  }\n\n  setMenuItems(menuItems: MenuItems[]) {\n\n    let objItem: MenuItems = {\n      menuId: 111,\n      userTypeId:1 , //hard coded , take it from jwt claims later\n      menuName: 'Dashboard',\n      menuParent: 0,\n      menuUrl: '/dashboard',\n      menuImgPath: './assets/images/disown.svg',\n      sortOrder: 0,\n      showInMenu:true,\n      children: [],\n    };\n    menuItems.unshift(objItem);\n    localStorage.setItem('coinEngineMenuItems', JSON.stringify(menuItems));\n  }\n\n  /**\n   * Get Object having specific key\n   * Example :this.authenticationService.getClaims(\"gid\")\n   * or\n   * Import userSession from 'src/app/models/userSession.ts'\n   * this.authenticationService.getClaims(userSession.UserIdClaim)\n   *\n   * @param key Key of the object to be return\n   *\n   * @return  Object of type any\n   */\n  getClaims(key: string): any {\n    return jwtDecode<any>(this.JwtToken)[key];\n  }\n\n  getAllClaims(): any {\n    return jwtDecode<any>(this.JwtToken);\n  }\n\n  login(\n    loginRequest: LoginRequest\n  ): Observable<BaseResponse<LoginResponse>> {\n    const uri = `${this.baseAPIUrl}/Auth/login`;\n    return this.http\n      .post<BaseResponse<LoginResponse>>(uri, loginRequest)\n      .pipe(map((data) => <BaseResponse<LoginResponse>>data));\n  }\n\n  authorizeOTP(\n    authorizeOTPRequest: AuthorizeOTPRequest\n  ): Observable<LoginResponse> {\n    const uri = `${this.baseAPIUrl}/login/AuthorizeOTP`;\n    return this.http\n      .post<LoginResponse>(uri, authorizeOTPRequest)\n      .pipe(map((data) => <LoginResponse>data));\n  }\n  logout(logoutRequest: LogoutRequest) : Observable<BaseResponse<boolean>> {\n    encryptStorage.clear();\n          this.router.navigate(['login']);\n    const uri = `${this.baseAPIUrl}/authenticator/LogOut`;\n    return this.http\n    .post<BaseResponse<boolean>>(uri, logoutRequest)\n    .pipe(map((data) => <BaseResponse<boolean>>data));\n  }\n  refreshAccessToken(\n    refreshTokenRequest: RefreshTokenRequest\n  ): Observable<BaseResponse<RefreshTokenResponse>> {\n    const uri = `${this.baseAPIUrl}/authenticator/refresh`;\n    return this.http\n      .post<BaseResponse<RefreshTokenResponse>>(uri, refreshTokenRequest)\n      .pipe(map((data) => <BaseResponse<RefreshTokenResponse>>data));\n  }\n\n  forgotPassword(\n    request: ForGotPasswordRequestDto\n  ): Observable<BaseResponse<string>> {\n    const uri = `${this.baseAPIUrl}/User/ForgotPassword`;\n    return this.http\n      .post<BaseResponse<string>>(uri, request)\n      .pipe(map((data) => <BaseResponse<string>>data));\n  }\n\n//method for validating otp used for forgot password method\n  validateOtp(\n    request: ValidateOtpRequestDto\n  ): Observable<BaseResponse<string>> {\n    const uri = `${this.baseAPIUrl}/User/ValidateOtp`;\n    return this.http\n      .post<BaseResponse<string>>(uri, request)\n      .pipe(map((data) => <BaseResponse<string>>data));\n  }\n\n  //reset new password if forgot old one\n  resetPassword(\n    request: ResetPasswordRequestDto\n  ): Observable<BaseResponse<string>> {\n    const uri = `${this.baseAPIUrl}/User/ResetPassword`;\n    return this.http\n      .post<BaseResponse<string>>(uri, request)\n      .pipe(map((data) => <BaseResponse<string>>data));\n  }\n\n  private getApiHeaders(): HttpHeaders {\n    var headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n    });\n\n    return headers;\n  }\n  \n}","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n\n  public isLoading = new BehaviorSubject<boolean>(false);\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { MessageEnum } from 'src/app/enums/message.enum';\n@Injectable({ providedIn: 'root' })\n\nexport class MessageService {\n\n  constructor() { }\n  private subject = new Subject<Map<string, any>>();\n  private allMap: Map<string, any> = new Map<string, any>();\n\n  sendMessage(key: string, message: any) {\n    if(key==MessageEnum.dashboardSubHeaderTitle){\n      this.allMap.delete(key);\n      this.allMap.set(MessageEnum.dashboardShowSubHeader, true)\n    }\n    this.allMap.set(key, message)\n    this.subject.next(this.allMap);\n  }\n\n  clearMessage() {\n    this.allMap.clear();\n    this.subject.next(this.allMap);\n  }\n\n  getMessage(): Observable<Map<string, any>> {\n    return this.subject.asObservable();\n  }\n}","import { Injectable } from '@angular/core';\nimport Swal from 'sweetalert2';\n \n@Injectable({\n  providedIn: 'root'\n})\nexport class SweetAlertService {\n \n  constructor() { }\n \n  showSuccess(title: string, text: string = ''): Promise<any> {\n    return Swal.fire({\n      icon: 'success',\n      title: title,\n      text: text,\n    });\n  }\n \n  showError(title: string, text: string = ''): Promise<any> {\n    return Swal.fire({\n      icon: 'error',\n      title: title,\n      text: text,\n    });\n  }\n \n  showInfo(title: string, text: string = ''): Promise<any> {\n    return Swal.fire({\n      icon: 'info',\n      title: title,\n      text: text,\n    });\n  }\n \n  showWarning(title: string, text: string = ''): Promise<any> {\n    return Swal.fire({\n      icon: 'warning',\n      title: title,\n      text: text,\n    });\n  }\n \n  showConfirmation(title: string ='Are you sure?', text: string = \"You won't be able to revert this\", confirmButtonText: string = 'Yes, delete it!', cancelButtonText: string = 'No, cancel it!'): Promise<any> {\n    return Swal.fire({\n      title: title,\n      text: text,\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: confirmButtonText,\n      cancelButtonText: cancelButtonText,\n    });\n  }\n}","export const environment = {\r\n    production : false,\r\n    environmentName : 'development',\r\n    baseAPIUrl :'https://localhost:44308/api'\r\n}","import * as $ from 'jquery';\n(window as any).$ = $;\n(window as any).jQuery = $;\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","routes","path","loadChildren","then","mod","LandingModule","AuthModule","AdminModule","AppRoutingModule","forRoot","imports","i1","exports","AppComponent","constructor","title","selectors","decls","vars","template","AppComponent_Template","rf","ctx","i0","ɵɵelement","BrowserModule","HTTP_INTERCEPTORS","HttpClientModule","HttpInterceptor","DatePipe","CookieService","MessageService","AppModule","bootstrap","provide","useClass","multi","declarations","MessageEnum","HttpErrorResponse","BehaviorSubject","throwError","catchError","switchMap","finalize","filter","take","authService","cookieService","loaderService","router","sweetAlertService","requestCount","sessionId","userId","isRefreshingToken","tokenSubject","UUID","get","intercept","request","next","isLoading","token","JwtToken","undefined","getClaims","handle","addTokenToRequest","pipe","err","console","log","message","error","status","showError","url","indexOf","Logout","handle401Error","navigate","logoutRequest","logout","subscribe","resp","isReplay","clone","setHeaders","Authorization","Platform","refTokenObj","refreshToken","refreshAccessToken","isSuccess","data","updatedAccessToken","updatedRefreshToken","Error","ɵɵinject","AuthenticationService","i2","i3","LoaderService","i4","Router","i5","SweetAlertService","factory","ɵfac","HttpHeaders","map","environment","EncryptStorage","jwtDecode","encryptStorage","prefix","http","baseAPIUrl","window","addEventListener","storageEventListener","bind","event","storageArea","localStorage","getItem","setItem","getRetailerInfo","JSON","parse","setMenuItems","menuItems","objItem","menuId","userTypeId","menuName","menuParent","menuUrl","menuImgPath","sortOrder","showInMenu","children","unshift","stringify","key","getAllClaims","login","loginRequest","uri","post","authorizeOTP","authorizeOTPRequest","clear","refreshTokenRequest","forgotPassword","validateOtp","resetPassword","getApiHeaders","headers","HttpClient","providedIn","Subject","subject","allMap","Map","sendMessage","dashboardSubHeaderTitle","delete","set","dashboardShowSubHeader","clearMessage","getMessage","asObservable","Swal","showSuccess","text","fire","icon","showInfo","showWarning","showConfirmation","confirmButtonText","cancelButtonText","showCancelButton","production","environmentName","$","jQuery","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}